version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - restore_cache:
          keys:
            - static-file

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test

      - run:
          name: collect static
          command: |
            . venv/bin/activate
            python manage.py collectstatic --noinput

      - save_cache:
          paths:
            - ./static
          key: static-file

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    docker:
      - image: google/cloud-sdk

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - static-file
      - run:
          name: build & push img
          command: |
            # Setting gcloud
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            gcloud auth configure-docker --quiet

            # Build
            docker pull asia.gcr.io/plant-robot/plant-robot-web || echo "Image not exists"
            docker build --cache-from=asia.gcr.io/plant-robot/plant-robot-web -t asia.gcr.io/plant-robot/plant-robot-web .

            # Push image
            gcloud docker -- push asia.gcr.io/plant-robot/plant-robot-web
      - run:
          name: Upload static file
          command: |
            ls
            echo gs://$GOOGLE_COULD_STORAGE_BUCKET/static
            gsutil rsync -R static/ gs://$GOOGLE_COULD_STORAGE_BUCKET/static
      - run:
          name: Deploy
          command: |
            echo "Deploy"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - master
                - staging
